
//write scss for drag card

/*
 <div className="App">
        <div className="widgets">
          <div
            className="widget"
            draggable
            onDragStart={(e) => handleOnDragStart(e, "widget1")}
          >
            Widget A
          </div>
          <div
            className="widget"
            draggable
            onDragStart={(e) => handleOnDragStart(e, "widget2")}
          >
            Widget B
          </div>
          <div
            className="widget"
            draggable
            onDragStart={(e) => handleOnDragStart(e, "widget3")}
          >
            Widget C
          </div>
        </div>
        <div
          className="drop-area"
          onDrop={handleOnDrop}
          onDragOver={handleOnDragOver}
        >
          {widgets.map((widget, index) => (
            <div key={index} onClick={() => handleWidgetRemove(index)}>
              {widget}
            </div>
          ))}
          <div>
            <input type="text" id="one" onChange={(e) => handleInput(e)} />
            <button id="one" onClick={add}>
              add
            </button>
          </div>
        </div>

        <div
          className="drop-area"
          onDrop={handleOnDrop1}
          onDragOver={handleOnDragOver}
        >
          {widgets1.map((widget1, index) => (
            <div
              key={index}
              onDragStart={(e) => handleOnDragStart1(e, widget1)}
            >
              {widget1}
            </div>
          ))}
          <div>
            <input type="text" id="two" onChange={(e) => handleInput(e)} />
            <button id="two" onClick={add}>
              add
            </button>
          </div>
        </div>

        <div
          className="drop-area"
          onDrop={handleOnDrop2}
          onDragOver={handleOnDragOver}
        >
          {widgets2.map((widget2, index) => (
            <div key={index} onClick={() => handleWidgetRemove2(index)}>
              {widget2}
            </div>
          ))}
          <div>
            <input type="text" id="three" onChange={(e) => handleInput(e)} />
            <button id="three" onClick={add}>
              add
            </button>
          </div>
        </div>
      </div>
*/

.App, .flex {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    height: 100vh;
    column-gap: 4rem;
    display: flex;
    justify-content: space-evenly;
    align-items: flex-start;
    height: 100vh;
    column-gap: 4rem;
    padding-top: 60px;
    flex-wrap: wrap;
    row-gap: 2rem;

    @media screen and (max-width: 1168px) {
      justify-content: center;
      align-items: flex-start;
      row-gap: 4rem;
      padding: clamp(16px, 2vw, 48px);
    
      
    }
  }
  
  .widgets {
    display: flex;
    
    gap: 10px;
  }
  
  .widget {
    padding: 10px;
    background-color: #f2f2f2;
    border: 1px solid #ccc;
    cursor: move;
  }
  
  .drop-area {
    margin-top: 20px;
    padding: 20px;
    background-color: #e6e6e6;
    border: 2px dashed #aaa;
    min-height: 400px;
    width: 200px;

  }
  

